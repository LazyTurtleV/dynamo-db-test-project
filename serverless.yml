plugins:
  - serverless-s3-local
  - serverless-dynamodb-local
  - serverless-offline

service: comments-cloud

custom:
  serverless-offline:
    noPrependStageInUrl: true
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true


frameworkVersion: ">=1.1.0"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    TABLE_NAME: CommentsTable
    PROJECT_CONFIGURATION: RES
    BUCKET_NAME: photos-bucket
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::photos-bucket"

functions:
  createComment:
    name: db-create-comment
    handler: API/comments.addComment
    events:
      - http:
          path: /comments/create
          method: post
  getComment:
    name: db-get-comment
    handler: API/comments.getComment
    events:
      - http:
          path: /comments/get-one
          method: post
  getComments:
    name: db-get-multiple-comments
    handler: API/comments.getComments
    events:
      - http:
          path: /comments/get-multiple
          method: post
  getAllComments:
    name: db-get-all-comments
    handler: API/comments.getAllComments
    events:
      - http:
          path: /comments/get-all
          method: get
  uploadToBucket:
    name: upload-to-bucket
    handler: API/bucketAPI.upload
    events:
      - http:
          path: /bucket/upload
          method: post
  downloadFromBucket:
    name: download-from-bucket
    handler: API/bucketAPI.download
    events:
      - http:
          path: /bucket/download
          method: post
  getUploadUrl:
    name: get-img-upload-url
    handler: API/bucketAPI.getUploadUrl
    events:
      - http:
          path: /bucket/upload-url
          method: post
  
resources:
  Resources:
    CommentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CommentsTable
        AttributeDefinitions:
          -
            AttributeName: comment_id
            AttributeType: S
          -
            AttributeName: comment_target
            AttributeType: S
        KeySchema:
          - 
            AttributeName: comment_target
            KeyType: HASH
          -
            AttributeName: comment_id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    S3bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: photos-bucket
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
              AllowedOrigins:
                - "*"

            
          
  